services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - mynetwork

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "yelp-topic-review:3:1"
      # Performance and timeout settings
      KAFKA_LOG_RETENTION_HOURS: 24
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10485760
      KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 300000
      KAFKA_REQUEST_TIMEOUT_MS: 300000
      # JVM heap settings
      KAFKA_HEAP_OPTS: "-Xmx1G -Xms1G"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - mynetwork

  producer:
    build:
      context: ./Producer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    ports:
      - "4041:4040"
    environment:
      KAFKA_HOST: "kafka:9092"
      DATASET_PATH: /app/data/
    volumes:
      - /home/adam/Documents/esgi/spark_streaming/spark-streaming-project/yelp_dataset:/app/data/
    networks:
      - mynetwork

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: divinandretomadam
      POSTGRES_PASSWORD: oDAnmvidrTnmeiAa
      POSTGRES_DB: spark_streaming_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    networks:
      - dbNetword
      - webNetwork

  consumer:
    build:
      context: ./Consumer
      dockerfile: Dockerfile
    depends_on:
      - producer
      - postgres
    ports:
      - "4040:4040"
    environment:
      DATASET_PATH: /app/data
      KAFKA_HOST: "kafka:9092"
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: divinandretomadam
      DATABASE_NAME: spark_streaming_db
      DATABASE_PASSWORD: oDAnmvidrTnmeiAa
    volumes:
      - /home/adam/Documents/esgi/spark_streaming/spark-streaming-project/yelp_dataset:/app/data/
    networks:
      - mynetwork
      - dbNetword

  streamlit:
    build: 
      context: ./DataVisualisation
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: divinandretomadam
      DATABASE_NAME: spark_streaming_db
      DATABASE_PASSWORD: oDAnmvidrTnmeiAa
    depends_on:
      - postgres
    networks:
      - webNetwork

networks:
  webNetwork:
    driver: bridge
  mynetwork:
    driver: bridge
  dbNetword:
    driver: bridge

volumes:
  postgres_data:
    name: spark_streaming_postgree_data_volume
